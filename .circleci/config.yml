# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2.1

orbs:
  heroku: circleci/heroku@1.0.1

jobs:
  build:
    docker:
      # specify the version here
      - image: circleci/elixir:1.8.2
        environment:
          POSTGRES_TEST_DB_URL: postgresql://postgres:verysecurepassword@localhost/phx_chat_test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # TODO ERIC: Revisit pg image for seeding and testing the test DB
      - image: circleci/postgres:12.2
        environment:
          POSTGRES_PASSWORD: verysecurepassword
          POSTGRES_USER: postgres
          POSTGRES_DB: phx_chat_test
          PHOENIX_REDIS_URI: redis://localhost:6379
      - image: circleci/redis:alpine

    working_directory: ~/repo
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: echo "hello, world! I am in $(pwd). I see the following files $(ls)"
      - run: mix local.hex --force && mix local.rebar --force
      - run: mix deps.get
      - run: mix compile --warnings-as-errors # fail a build if there are any compile errors
      - run:
          name: Waiting for Postgres to be ready # taken from example at https://circleci.com/docs/2.0/postgres-config/
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success! Tried in $i time(s) && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
        # TODO test connecting to a regular DB and/or booting up the server?
      - run: mix test # connects to the test db
      # TODO ERIC: manual approval button?
      - heroku/install
      - heroku/deploy-via-git

